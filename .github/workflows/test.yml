name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm run test
      
    - name: Run test coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30

  # Cross-Platform Tests
  cross-platform-tests:
    name: Cross-Platform Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Test cross-platform compatibility
      run: npm run test:cross-platform
      
    - name: Test npx compatibility
      run: npm run test:npx-compatibility
      
    - name: Test all platforms (simulated)
      run: npm run test:all-platforms

  # CLI Tests
  cli-tests:
    name: CLI Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Test CLI validation
      run: npm run validate:cli
      
    - name: Test CLI init command
      run: npm run validate:cross-platform
      
    - name: Test npx functionality
      run: npm run test:npx

  # Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance benchmarks
      run: npm run performance:full
      
    - name: Test build performance
      run: npm run performance:build-test
      
    - name: Test package size
      run: npm run performance:size-test
      
    - name: Test npx performance
      run: npm run performance:npx-test

  # Security Tests
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security tests
      run: npm run security:test-full
      
    - name: Run vulnerability tests
      run: npm run security:vulnerability-test
      
    - name: Run compliance tests
      run: npm run security:compliance-test
      
    - name: Run monitoring tests
      run: npm run security:monitor-test
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: dependency-security-report.json
        retention-days: 90

  # Quality Tests
  quality-tests:
    name: Quality Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Run package quality tests
      run: npm run quality:package
      
    - name: Run documentation quality tests
      run: npm run quality:documentation
      
    - name: Run performance quality tests
      run: npm run quality:performance
      
    - name: Run all quality tests
      run: npm run quality:all

  # Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, cli-tests, quality-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run CI integration tests
      run: npm run ci:integration
      
    - name: Run full CI pipeline
      run: npm run ci:full
      
    - name: Test distribution
      run: npm run distribute:test
      
    - name: Test installation
      run: npm run distribute:install 