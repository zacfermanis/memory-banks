name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  NODE_VERSION: '18'
  NPM_VERSION: 'latest'

jobs:
  # Build and Test Job
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Build project
      run: npm run build
      
    - name: Validate build
      run: npm run validate:build
      
    - name: Test CLI
      run: npm run validate:cli
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30

  # Quality Control Job
  quality-control:
    name: Quality Control
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run package validation
      run: npm run quality:package
      
    - name: Run security scanning
      run: npm run quality:security
      
    - name: Run documentation validation
      run: npm run quality:documentation
      
    - name: Run performance validation
      run: npm run quality:performance
      
    - name: Generate quality report
      run: npm run quality:all

  # Cross-Platform Testing Job
  cross-platform:
    name: Cross-Platform Testing
    runs-on: ${{ matrix.os }}
    needs: build-and-test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Test cross-platform compatibility
      run: npm run test:cross-platform
      
    - name: Test npx compatibility
      run: npm run test:npx-compatibility

  # Distribution Testing Job
  distribution-test:
    name: Distribution Testing
    runs-on: ubuntu-latest
    needs: [build-and-test, quality-control, cross-platform]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test distribution
      run: npm run distribute:test-complete
      
    - name: Validate download
      run: npm run distribute:download
      
    - name: Test installation
      run: npm run distribute:install
      
    - name: Test performance
      run: npm run distribute:performance

  # Security Audit Job
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm run security:comprehensive
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: security-report.json
        retention-days: 90

  # Documentation Job
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate documentation
      run: npm run validate:documentation
      
    - name: Generate documentation report
      run: npm run quality:documentation
      
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          README.md
          CHANGELOG.md
          docs/
        retention-days: 30 